{"version":3,"file":"static/js/131.257027c9.chunk.js","mappings":"mJA6BA,IA1BiB,WACf,OAAkCA,EAAAA,EAAAA,WAAS,GAAM,eAA1CC,EAAS,KAAEC,EAAY,KAC9B,GAA0BF,EAAAA,EAAAA,UAAS,MAAK,eAAjCG,EAAK,KAAEC,EAAQ,KAEhBC,GAAUC,EAAAA,EAAAA,aAAW,yCAAC,WAAOC,EAAKC,GAAO,kFAKX,OAJlCN,GAAa,GACbE,EAAS,MAAM,SAEPK,EAAa,IAAIC,gBACjBC,EAASF,EAAWE,OAAO,EAAD,OACTC,EAAAA,GAAAA,IAAUL,EAAK,CAAEI,OAAAA,IAAU,KAAD,EACnC,OADmC,SAAzCE,EAAI,EAAJA,KACRL,EAAQK,GAAM,mBACP,kBAAMJ,EAAWK,OAAQ,IAAD,kCAE/BV,EAAS,KAAEW,SAASF,MAAQ,wBAAwB,QAEtDX,GAAa,GAAO,0DACrB,qDAb0B,GAaxB,IAEH,MAAO,CACLD,UAAAA,EACAE,MAAAA,EACAE,QAAAA,EAEJ,C,mHCtBMW,GAAOC,EAAAA,EAAAA,OAAK,kBAAM,0BAAsB,IACxCC,GAAeD,EAAAA,EAAAA,OAAK,kBAAM,4BAAyB,IACnDE,GAAcF,EAAAA,EAAAA,OAAK,kBAAM,4BAAuB,IAChDG,GAAiBH,EAAAA,EAAAA,OAAK,kBAAM,4BAA0C,IAoC5E,EAlCsB,WACpB,IAAQI,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAkCrB,EAAAA,EAAAA,YAAU,eAArCuB,EAAS,KAAEC,EAAY,KACtBnB,GAAYoB,EAAAA,EAAAA,KAAZpB,QAUR,OARAqB,EAAAA,EAAAA,YAAU,WACRL,GACEhB,EAAQ,sCAAD,OACiCgB,EAAE,4DACxCG,EAEN,GAAG,CAACH,KAGF,8BACGE,GACC,iBAAKI,UAAU,8DAA6D,WAC1E,SAACR,EAAW,CAACI,UAAWA,KAExB,gBAAKI,UAAU,gDAA+C,UAC5D,iBAAKA,UAAU,yCAAwC,WACrD,SAACT,EAAY,CAACK,UAAWA,KACzB,SAACP,EAAI,CAACK,GAAIA,KACV,SAACD,EAAc,CAACC,GAAIA,aAK1B,gBAAKM,UAAU,2CAA0C,sBAIjE,ECnCA,EAJgB,WACd,OAAO,SAAC,EAAa,GACvB,C","sources":["hooks/use-Fetch.js","components/Movies/MoviesDetails.jsx","pages/Details.jsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst useFetch = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const getData = useCallback(async (url, setData) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const controller = new AbortController();\r\n      const signal = controller.signal;\r\n      const { data } = await axios.get(url, { signal });\r\n      setData(data);\r\n      return () => controller.abort();\r\n    } catch (e) {\r\n      setError(e.response.data || \"Something went wrong\");\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  return {\r\n    isLoading,\r\n    error,\r\n    getData,\r\n  };\r\n};\r\n\r\nexport default useFetch;\r\n","import { lazy, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport useFetch from \"../../hooks/use-Fetch\";\r\n\r\nconst Cast = lazy(() => import(\"../Cast/Cast\"));\r\nconst ExtraDetails = lazy(() => import(\"../ExtraDetails\"));\r\nconst MainDetails = lazy(() => import(\"./MainDetails\"));\r\nconst Recommendation = lazy(() => import(\"../Recommendation/Recommendation\"));\r\n\r\nconst MoviesDetails = () => {\r\n  const { id } = useParams();\r\n  const [movieData, setMovieData] = useState();\r\n  const { getData } = useFetch();\r\n\r\n  useEffect(() => {\r\n    id &&\r\n      getData(\r\n        `https://api.themoviedb.org/3/movie/${id}?api_key=3bb216411421fdef32dab7fb43d28fa2&language=en-US`,\r\n        setMovieData\r\n      );\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      {movieData ? (\r\n        <div className=\"overflow-x-hidden flex flex-col items-center justify-center\">\r\n          <MainDetails movieData={movieData} />\r\n\r\n          <div className=\" gap-10 flex items-start justify-start w-full\">\r\n            <div className=\"flex flex-col gap-7 max-w-[100vw] p-10\">\r\n              <ExtraDetails movieData={movieData} />\r\n              <Cast id={id} />\r\n              <Recommendation id={id} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"text-white font-bold text-center text-lg\">Loading</div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoviesDetails;\r\n","import React from \"react\";\r\nimport MoviesDetails from \"../components/Movies/MoviesDetails\";\r\n\r\nconst Details = () => {\r\n  return <MoviesDetails />;\r\n};\r\n\r\nexport default Details;\r\n"],"names":["useState","isLoading","setIsLoading","error","setError","getData","useCallback","url","setData","controller","AbortController","signal","axios","data","abort","response","Cast","lazy","ExtraDetails","MainDetails","Recommendation","id","useParams","movieData","setMovieData","useFetch","useEffect","className"],"sourceRoot":""}