{"version":3,"file":"static/js/348.e3ef8008.chunk.js","mappings":"mJA6BA,IA1BiB,WACf,OAAkCA,EAAAA,EAAAA,WAAS,GAAM,eAA1CC,EAAS,KAAEC,EAAY,KAC9B,GAA0BF,EAAAA,EAAAA,UAAS,MAAK,eAAjCG,EAAK,KAAEC,EAAQ,KAEhBC,GAAUC,EAAAA,EAAAA,aAAW,yCAAC,WAAOC,EAAKC,GAAO,kFAKX,OAJlCN,GAAa,GACbE,EAAS,MAAM,SAEPK,EAAa,IAAIC,gBACjBC,EAASF,EAAWE,OAAO,EAAD,OACTC,EAAAA,GAAAA,IAAUL,EAAK,CAAEI,OAAAA,IAAU,KAAD,EACnC,OADmC,SAAzCE,EAAI,EAAJA,KACRL,EAAQK,GAAM,mBACP,kBAAMJ,EAAWK,OAAQ,IAAD,kCAE/BV,EAAS,KAAEW,SAASF,MAAQ,wBAAwB,QAEtDX,GAAa,GAAO,0DACrB,qDAb0B,GAaxB,IAEH,MAAO,CACLD,UAAAA,EACAE,MAAAA,EACAE,QAAAA,EAEJ,C,0GCvBMW,GAAYC,EAAAA,EAAAA,OAAK,kBAAM,oDAAsB,IAC7CC,GAAYD,EAAAA,EAAAA,OAAK,kBAAM,4BAAqB,IAC5CE,GAAaF,EAAAA,EAAAA,OAAK,kBAAM,4BAAsB,IAC9CG,GAAaH,EAAAA,EAAAA,OAAK,kBAAM,4BAAuB,IA6DrD,EA3De,WACb,OAA4BjB,EAAAA,EAAAA,YAAU,eAA/BqB,EAAM,KAAEC,EAAS,KACxB,GAAgCtB,EAAAA,EAAAA,UAAS,GAAE,eAApCuB,EAAQ,KAAEC,EAAW,KAGtBC,EAAa,CACjB,CAAEC,GAAI,EAAGC,KAAM,WACf,CAAED,GAAI,GAAIC,KAAM,UAChB,CAAED,GAAI,GAAIC,KAAM,aAChB,CAAED,GAAI,GAAIC,KAAM,aAChB,CAAED,GAAI,GAAIC,KAAM,UAChB,CAAED,GAAI,GAAIC,KAAM,SAChB,CAAED,GAAI,GAAIC,KAAM,eAChB,CAAED,GAAI,GAAIC,KAAM,SAChB,CAAED,GAAI,MAAOC,KAAM,UACnB,CAAED,GAAI,GAAIC,KAAM,WAChB,CAAED,GAAI,GAAIC,KAAM,UAChB,CAAED,GAAI,GAAIC,KAAM,WAChB,CAAED,GAAI,MAAOC,KAAM,SACnB,CAAED,GAAI,KAAMC,KAAM,WAClB,CAAED,GAAI,MAAOC,KAAM,WACnB,CAAED,GAAI,IAAKC,KAAM,mBACjB,CAAED,GAAI,MAAOC,KAAM,YACnB,CAAED,GAAI,GAAIC,KAAM,YAChB,CAAED,GAAI,MAAOC,KAAM,OACnB,CAAED,GAAI,GAAIC,KAAM,YAGlB,OAzBsBC,EAAAA,EAAAA,KAAd3B,WA2BJ,gBAAK4B,UAAU,mEAAkE,yBAOnF,iBAAKA,UAAU,8BAA6B,WAC1C,SAAC,EAAAC,SAAQ,CAACC,UAAU,wCAAsB,UACxC,SAACf,EAAS,CAACM,UAAWA,OAExB,SAAC,EAAAQ,SAAQ,CAACC,UAAU,wCAAsB,UACxC,SAACb,EAAS,CACRc,KAAMP,EACNH,UAAWA,EACXC,SAAUA,EACVC,YAAaA,OAGjB,SAAC,EAAAM,SAAQ,CAACC,UAAU,wCAAsB,UACxC,SAACZ,EAAU,CAACE,OAAQA,EAAQI,WAAYA,OAE1C,SAAC,EAAAK,SAAQ,CAACC,UAAU,wCAAsB,UACxC,SAACX,EAAU,CAACI,YAAaA,EAAaD,SAAUA,QAIxD,EC5DA,EAJa,WACX,OAAO,SAAC,EAAM,GAChB,C","sources":["hooks/use-Fetch.js","components/Movies/Movies.jsx","pages/Home.jsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst useFetch = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const getData = useCallback(async (url, setData) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const controller = new AbortController();\r\n      const signal = controller.signal;\r\n      const { data } = await axios.get(url, { signal });\r\n      setData(data);\r\n      return () => controller.abort();\r\n    } catch (e) {\r\n      setError(e.response.data || \"Something went wrong\");\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  return {\r\n    isLoading,\r\n    error,\r\n    getData,\r\n  };\r\n};\r\n\r\nexport default useFetch;\r\n","import { useState, lazy, Suspense } from \"react\";\r\n\r\nimport useFetch from \"../../hooks/use-Fetch\";\r\n\r\nconst SearchBar = lazy(() => import(\"../SearchBar\"));\r\nconst GenreList = lazy(() => import(\"./GenreList\"));\r\nconst MoviesList = lazy(() => import(\"./MoviesList\"));\r\nconst Pagination = lazy(() => import(\"../Pagination\"));\r\n\r\nconst Movies = () => {\r\n  const [movies, setMovies] = useState();\r\n  const [currPage, setCurrPage] = useState(1);\r\n  const { isLoading } = useFetch();\r\n\r\n  const genresList = [\r\n    { id: 1, name: \"Popular\" },\r\n    { id: 28, name: \"Action\" },\r\n    { id: 12, name: \"Adventure\" },\r\n    { id: 16, name: \"Animation\" },\r\n    { id: 35, name: \"Comedy\" },\r\n    { id: 80, name: \"Crime\" },\r\n    { id: 99, name: \"Documentary\" },\r\n    { id: 18, name: \"Drama\" },\r\n    { id: 10751, name: \"Family\" },\r\n    { id: 14, name: \"Fantasy\" },\r\n    { id: 27, name: \"Horror\" },\r\n    { id: 36, name: \"History\" },\r\n    { id: 10402, name: \"Music\" },\r\n    { id: 9648, name: \"Mystery\" },\r\n    { id: 10749, name: \"Romance\" },\r\n    { id: 878, name: \"Science Fiction\" },\r\n    { id: 10770, name: \"TV Movie\" },\r\n    { id: 53, name: \"Thriller\" },\r\n    { id: 10752, name: \"War\" },\r\n    { id: 37, name: \"Western\" },\r\n  ];\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-[100vh] text-[3rem] font-bold\">\r\n        Loading...\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center \">\r\n      <Suspense fallback={<div>Loading...</div>}>\r\n        <SearchBar setMovies={setMovies} />\r\n      </Suspense>\r\n      <Suspense fallback={<div>Loading...</div>}>\r\n        <GenreList\r\n          list={genresList}\r\n          setMovies={setMovies}\r\n          currPage={currPage}\r\n          setCurrPage={setCurrPage}\r\n        />\r\n      </Suspense>\r\n      <Suspense fallback={<div>Loading...</div>}>\r\n        <MoviesList movies={movies} genresList={genresList} />\r\n      </Suspense>\r\n      <Suspense fallback={<div>Loading...</div>}>\r\n        <Pagination setCurrPage={setCurrPage} currPage={currPage} />\r\n      </Suspense>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n","import Movies from \"../components/Movies/Movies\";\r\n\r\nconst Home = () => {\r\n  return <Movies />;\r\n};\r\n\r\nexport default Home;\r\n"],"names":["useState","isLoading","setIsLoading","error","setError","getData","useCallback","url","setData","controller","AbortController","signal","axios","data","abort","response","SearchBar","lazy","GenreList","MoviesList","Pagination","movies","setMovies","currPage","setCurrPage","genresList","id","name","useFetch","className","Suspense","fallback","list"],"sourceRoot":""}