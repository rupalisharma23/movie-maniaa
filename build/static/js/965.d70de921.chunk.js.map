{"version":3,"file":"static/js/965.d70de921.chunk.js","mappings":"wHA0DA,UA1DoB,SAAH,GAAuB,IACzBA,EADQC,EAAS,EAATA,UAgBrB,OACE,gBAAKC,UAAU,+DAA8D,UAC3E,iBAAKA,UAAU,2DAA0D,WACvE,gBACEA,UAAU,uDACVC,IAAG,6CAAiD,OAATF,QAAS,IAATA,OAAS,EAATA,EAAWG,gBAGxD,iBAAKF,UAAU,mEAAkE,WAC/E,cAAGA,UAAU,qBAAoB,mBAAc,OAATD,QAAS,IAATA,OAAS,EAATA,EAAWI,MAAK,aApB9C,SAACC,GACf,OAAO,IAAIC,KAAKD,GAAME,aACxB,CAkBmEC,CAChD,OAATR,QAAS,IAATA,OAAS,EAATA,EAAWS,cACZ,QAED,iBAAKR,UAAU,kDAAiD,WAC9D,uBArBG,SAACI,GACZ,IAAMK,EAAQ,IAAIJ,KAAKD,GAAMM,UACvBC,EAAQ,IAAIN,KAAKD,GAAMQ,WACvBC,EAAO,IAAIR,KAAKD,GAAME,cAC5B,MAAM,GAAN,OAAUG,EAAK,YAAIE,EAAQ,EAAC,YAAIE,EAClC,CAgBcT,CAAc,OAATL,QAAS,IAATA,OAAS,EAATA,EAAWS,iBACpB,iBAAKR,UAAU,yDAAwD,mBAE3D,OAATD,QAAS,IAATA,OAAS,EAATA,EAAWe,OAAOC,KAAI,SAACC,GAAC,OACvB,cAEEhB,UAAU,+DAA8D,SAEvEgB,EAAEC,MAHED,EAAEE,GAIL,QAIR,qCAAuB,OAATnB,QAAS,IAATA,OAAS,EAATA,EAAWoB,SAAU,IAAIC,QAAQ,GAAE,WAGnD,eAAGpB,UAAU,gBAAe,qBA7CvBF,EA8CkB,OAATC,QAAS,IAATA,OAAS,EAATA,EAAWsB,aA7CxBC,OAAOC,WAAWzB,GAAGsB,QAAQ,IA6CQ,UAEtC,cAAGpB,UAAU,iCAAgC,SAAW,OAATD,QAAS,IAATA,OAAS,EAATA,EAAWyB,WAC1D,cAAGxB,UAAU,gBAAe,uBAC5B,cAAGA,UAAU,wBAAuB,SAAW,OAATD,QAAS,IAATA,OAAS,EAATA,EAAW0B,kBAK3D,C","sources":["components/Movies/MainDetails.jsx"],"sourcesContent":["const MainDetails = ({ movieData }) => {\r\n  const fun = (x) => {\r\n    return Number.parseFloat(x).toFixed(1);\r\n  };\r\n\r\n  const getYear = (date) => {\r\n    return new Date(date).getFullYear();\r\n  };\r\n\r\n  const date = (date) => {\r\n    const today = new Date(date).getDate();\r\n    const month = new Date(date).getMonth();\r\n    const year = new Date(date).getFullYear();\r\n    return `${today}/${month + 1}/${year}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-black bg-opacity-90 w-full flex items-start justify-start\">\r\n      <div className=\"md:flex items-center justify-start gap-10 p-10 w-[100vw]\">\r\n        <img\r\n          className=\"min-w-[18rem] h-[432px] rounded-xl max-[768px]:mb-5 \"\r\n          src={`https://image.tmdb.org/t/p/original${movieData?.poster_path}`}\r\n        />\r\n\r\n        <div className=\"flex flex-col items-start justify-start text-white gap-3 text-xl\">\r\n          <p className=\"text-4xl font-bold\">{`${movieData?.title} (${getYear(\r\n            movieData?.release_date\r\n          )})`}</p>\r\n\r\n          <div className=\"text-base flex items-center justify-start gap-2\">\r\n            <p>{date(movieData?.release_date)}</p>\r\n            <div className=\"flex items-center justify-center gap-1 max-sm:w-[50%] \">\r\n              &#x2022;\r\n              {movieData?.genres.map((g) => (\r\n                <p\r\n                  key={g.id}\r\n                  className=\"max-sm:truncate after:content-[','] last:after:content-[''] \"\r\n                >\r\n                  {g.name}\r\n                </p>\r\n              ))}\r\n            </div>\r\n\r\n            <p>&#x2022; {(movieData?.runtime / 60).toFixed(2)}h</p>\r\n          </div>\r\n\r\n          <p className=\"font-semibold\">\r\n            Score: {fun(movieData?.vote_average)}/10\r\n          </p>\r\n          <p className=\"text-gray-400 italic text-base\">{movieData?.tagline}</p>\r\n          <p className=\"font-semibold\">Overview</p>\r\n          <p className=\"text-base font-medium\">{movieData?.overview}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainDetails;\r\n"],"names":["x","movieData","className","src","poster_path","title","date","Date","getFullYear","getYear","release_date","today","getDate","month","getMonth","year","genres","map","g","name","id","runtime","toFixed","vote_average","Number","parseFloat","tagline","overview"],"sourceRoot":""}